import{eh as m,ei as f,ej as y,eb as g,B as d,ek as O,el as p,bz as T,aT as o,af as l,em as U}from"./index-3b8711e5.js";async function h(a){const t=await p(a);return Object.keys(t).map(i=>{let e=t[i];return(typeof e!="string"||!e.startsWith("0x"))&&(e=T(e)),[i,e]}).reduce((i,e)=>{let[n,r]=e;return{...i,[n]:r}},{})}async function P(a,t,i){const e=await p(a),n={sender:e.sender,nonce:e.nonce,initCodeHash:o(e.initCode),callDataHash:o(e.callData),callGasLimit:e.callGasLimit,verificationGasLimit:e.verificationGasLimit,preVerificationGas:e.preVerificationGas,maxFeePerGas:e.maxFeePerGas,maxPriorityFeePerGas:e.maxPriorityFeePerGas,paymasterAndDataHash:o(e.paymasterAndData)},r={components:[{type:"address",name:"sender"},{type:"uint256",name:"nonce"},{type:"bytes32",name:"initCodeHash"},{type:"bytes32",name:"callDataHash"},{type:"uint256",name:"callGasLimit"},{type:"uint256",name:"verificationGasLimit"},{type:"uint256",name:"preVerificationGas"},{type:"uint256",name:"maxFeePerGas"},{type:"uint256",name:"maxPriorityFeePerGas"},{type:"bytes32",name:"paymasterAndDataHash"}],name:"hashedUserOp",type:"tuple"},s=l.encode([r],[{...n}]),c=o(s),u=l.encode(["bytes32","address","uint256"],[c,t,i]);return o(u)}const b=()=>{const a=BigInt(Math.floor(Math.random()*4294967296)),t=BigInt(Math.floor(Math.random()*4294967296)),i=BigInt(Math.floor(Math.random()*4294967296)),e=BigInt(Math.floor(Math.random()*4294967296)),n=BigInt(Math.floor(Math.random()*4294967296)),r=BigInt(Math.floor(Math.random()*4294967296));return a<<BigInt(160)|t<<BigInt(128)|i<<BigInt(96)|e<<BigInt(64)|n<<BigInt(32)|r},G=()=>{let a=b().toString(16);return a.length%2!==0&&(a="0"+a),a="0x"+a,d.from(U([a,"0x0000000000000000"]))};class w{constructor(t,i,e,n,r){this.bundlerUrl=t,this.entryPointAddress=i,this.chainId=e;const s={};if(m(this.bundlerUrl)){const c=typeof globalThis<"u"&&"APP_BUNDLE_ID"in globalThis?globalThis.APP_BUNDLE_ID:void 0;r?s["x-secret-key"]=r:n&&(s["x-client-id"]=n,c&&(s["x-bundle-id"]=c)),typeof globalThis<"u"&&"TW_AUTH_TOKEN"in globalThis&&typeof globalThis.TW_AUTH_TOKEN=="string"&&(s.authorization=`Bearer ${globalThis.TW_AUTH_TOKEN}`),typeof globalThis<"u"&&"TW_CLI_AUTH_TOKEN"in globalThis&&typeof globalThis.TW_CLI_AUTH_TOKEN=="string"&&(s.authorization=`Bearer ${globalThis.TW_CLI_AUTH_TOKEN}`,s["x-authorize-wallet"]="true"),f(s)}this.userOpJsonRpcProvider=new y({url:this.bundlerUrl,headers:s},{name:"Connected bundler network",chainId:e}),this.initializing=this.validateChainId()}async validateChainId(){if(await g(this.chainId))return;const t=await this.userOpJsonRpcProvider.send("eth_chainId",[]),i=parseInt(t);if(i!==this.chainId)throw new Error(`bundler ${this.bundlerUrl} is on chainId ${i}, but provider is on chainId ${this.chainId}`)}async sendUserOpToBundler(t){await this.initializing;const i=await h(t),e=[i,this.entryPointAddress];return await this.printUserOperation("eth_sendUserOperation",e),await this.userOpJsonRpcProvider.send("eth_sendUserOperation",[i,this.entryPointAddress])}async estimateUserOpGas(t){await this.initializing;const i=await h(t),e=[i,this.entryPointAddress];await this.printUserOperation("eth_estimateUserOperationGas",e);const n=await this.userOpJsonRpcProvider.send("eth_estimateUserOperationGas",[i,this.entryPointAddress]);return{preVerificationGas:d.from(n.preVerificationGas),verificationGas:d.from(n.verificationGas),verificationGasLimit:d.from(n.verificationGasLimit),callGasLimit:d.from(n.callGasLimit).add(O)}}async getUserOperationGasPrice(){return await this.initializing,await this.userOpJsonRpcProvider.send("thirdweb_getUserOperationGasPrice",[])}async getUserOperationReceipt(t){return await this.initializing,await this.userOpJsonRpcProvider.send("eth_getUserOperationReceipt",[t])}async zkPaymasterData(t){return await this.initializing,await this.userOpJsonRpcProvider.send("zk_paymasterData",[await h({...t,gas:t.gasLimit})])}async zkBroadcastTransaction(t){return await this.initializing,await this.userOpJsonRpcProvider.send("zk_broadcastTransaction",[t])}async printUserOperation(t,i){}}export{w as H,P as g,h,G as r};
